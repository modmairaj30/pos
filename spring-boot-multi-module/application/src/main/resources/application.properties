#spring Boot Config
spring.main.banner-mode=off
spring.devtools.restart.enabled=false
#To disable empeded server tomcat
#spring.main.web.application-type=none
#spring.cache.type=none
#jwt.secret=webapp


#DB Config
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/telugu2023?autoReconnect=true&useSSL=false
spring.datasource.username=root
spring.datasource.password=root

#spring.datasource.url=jdbc:mysql://ndc-mobdb-001.abc.com:3306/sdms?autoReconnect=true&useSSL=false
#spring.datasource.username=abc
#spring.datasource.password=abc@#123

spring.datasource.hikari.maximum-pool-size=50
spring.datasource.hikari.leak-detection-threshold=240000
spring.datasource.hikari.max-lifetime=300000
spring.datasource.hikari.minimum-idle=20
spring.datasource.hikari.maximum-idle=20
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.test-while-idle=true
spring.datasource.hikari.test-on-borrow=true
spring.datasource.hikari.validation-query=SELECT 1
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.time-between-eviction-runs-millis=5000 
spring.datasource.hikari.min-evictable-idle-time-millis=60000

#JPA
#spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

#Environment
app.environment=Prod
#app.environment=Dev

#Logging Config
logging.level.org.springframework.web=DEBUG
#logging.level.org.springframework.web=INFO
#logging.level.org.hibernate=ERROR
#logging.level.com.webapp=DEBUG

# DB side session management 
#spring.datasource.initialization-mode=always
# Session store type.
spring.session.store-type=jdbc
#spring will create required tables for us
# Database schema initialization mode.
#If we specify spring.session.jdbc.initialize-schema=never, then we need to create session tables in manually executing the script.
# In production, we don't enable the auto-create/update.
#spring.session.jdbc.initialize-schema=always
spring.session.jdbc.initialize-schema=never
#using spring.session.jdbc.initialize-schema=embedded we need to create tables in database by
#spring.session.jdbc.initialize-schema=embedded

# Path to the SQL file to use to initialize the database schema.
#spring.session.jdbc.schema=classpath:org/springframework/session/jdbc/schema-@@platform@@.sql
#spring.session.jdbc.schema=classpath:org/springframework/session/jdbc/schema-@@platform@@.sql
# Name of the database table used to store sessions.
#spring.session.jdbc.table-name=SPRING_SESSION
#Changing spring session table names
#spring.session.jdbc.table-name=USER_SESSION
#By default, the housekeeping runs every minute. If you want to change it let\u2019s say every 3 minutes, you need to configure the application as shown below
#The more you do clean up you get a cleaner session store. However, cleaning up every second might be an overkill
#spring.session.jdbc.cleanup-cron=0 */3 * * * *
spring.session.timeout.seconds=900
# To enable h2 console to check embedded database
spring.h2.console.enabled=true
#By adding the below properties, we could take a look at the tables where the session information is stored from the 
#URL :- http://localhost:8080/h2-console/:
#spring.h2.console.path=/h2-console
#server.servlet.session.tracking-modes configuration. This configuration takes one of COOKIE,URL SSL as a value
#server.servlet.session.tracking-modes=URL

#server Configs
# server side session timeout
server.sessionTimeout=1114400
server.port=8080
# server context path
server.servlet.context-path=/webapp
#CORS mapping in Interceptor-->Spring
cors.mappings=http://localhost:4200,http://localhost:9090
#app.origin mapping in Filter--> Servlet
app.origin=http://localhost:4200
# Client URL
#client.url=http://localhost:58098
#management.endpoints.web.cors.allowed-origins=http://localhost:58098
#management.endpoints.web.cors.allowed-methods=GET, POST

# App Properties
# JWT tocken  key
webapp.app.jwtSecret= webAppSecretKey
#jwt tocken expire time 24(hours)
webapp.app.jwtExpirationMs= 86400000 
# jwt tocken expire time 144 min (minute)2 .4 h (hour)
#webapp.app.jwtExpirationMs= 8640000 
# external filepath
app.filePath.win=C:\\
app.filePath.linux=/opt/


# LDAP Config
#ldap.ou.directory=DC=webapp,DC=com
#ldap.provider_url=ldap://0.0.0.0:389
#ldap.security_principal=abc@a.com
#ldap.security_credential=abc123!@
#ldap.security_authentication=simple
#ldap.initial_context_factory=com.sun.jndi.ldap.LdapCtxFactory

#ssl production
#server.ssl.key-store-type=PKCS12
#server.ssl.key-store=classpath:starjsw.p12
#server.ssl.key-store-password=win2020pass1word
#server.ssl.key-alias=server
#server.ssl.enabled-protocols=TLSv1.2,TLSv1.3
#security.require-ssl=true
webapp.app.titleMaster.autoNum=22
#ssl local
#server.port=8443
#server.ssl.key-store-type=PKCS12
#server.ssl.key-store=classpath:keystore.p12
#server.ssl.key-store-password=password
#server.ssl.key-alias=server
#security.require-ssl=true

#remote debugging command ---should be execute in server  in cmd
#spring.devtools.remote.debug.local-port=8010
#java -agentlib:jdwp=transport=dt_socket,server=y,address=192.168.0.5:8000,suspend=n -jar application-0.0.1-SNAPSHOT.war
#server.port=8080
#Angular Build Command
#node --max_old_space_size=8192 node_modules/\@angular/cli/bin/ng build --prod
#java run command linux
#nohup java -jar -Dapp.config=file:/opt/application.properties /opt/application-0.0.1-SNAPSHOT.war > sysout.log
#java run command Windows
#java -jar -Dapp.config=file:D:/workSpacePublisher24072021/webappclient/dist/application.properties application-0.0.1-SNAPSHOT.war > sysout.log
#java -jar -Dapp.config=file:C:/Users/Moham/Build-2/application.properties application-0.0.1-SNAPSHOT.war
# npm install  -g @angular/cli
# nginx -s stop	fast shutdown
# nginx -s quit	graceful shutdown
# nginx -s reload	changing configuration, starting new worker processes with a new configuration, graceful shutdown of old worker processes
# nginx -s reopen	re-opening log files
#java -jar -Dapp.config=file:D:/server/application.properties application-0.0.1-SNAPSHOT.war > sysout.log
#java -jar -Dapp.config=file:D:/server1/application.properties application-0.0.1-SNAPSHOT.war > sysout.log



